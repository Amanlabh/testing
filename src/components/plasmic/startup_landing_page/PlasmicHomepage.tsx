// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 3fM1A7DEYi7UJEwKBiGQhj
// Component: WxtB2ZjaUHLx

import * as React from "react";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import { useScreenVariants as useScreenVariantstG5ZIq17X4W } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: tG5zIq17X4w_/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic.module.css"; // plasmic-import: 3fM1A7DEYi7UJEwKBiGQhj/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: WxtB2ZjaUHLx/css

import IconIcon from "./icons/PlasmicIcon__Icon"; // plasmic-import: tmVMeMiNDOdd/icon
import Icon3Icon from "./icons/PlasmicIcon__Icon3"; // plasmic-import: YWuavYzupQh6/icon
import Icon2Icon from "./icons/PlasmicIcon__Icon2"; // plasmic-import: 8ZXPxWQC2wc2/icon
import Icon28Icon from "./icons/PlasmicIcon__Icon28"; // plasmic-import: wE4ptxrCsEXM/icon
import logo1SvgA6JxNbb9O1Q from "./images/logo1Svg.svg"; // plasmic-import: -a6JXNbb9o1q/picture
import virtualAssistancepngFRBw3LBoYEco from "./images/virtualAssistancepng.png"; // plasmic-import: fRBw3LBoYEco/picture
import rocketManRemovebgPreview1Png5U2Q3GjFm4OY from "./images/rocketManRemovebgPreview1Png.png"; // plasmic-import: 5u2q3GjFm4oY/picture
import blastRemovebgPreviewpngGo42JSnTIs5S from "./images/blastRemovebgPreviewpng.png"; // plasmic-import: GO42jSnTIs5s/picture
import integrationsHeadersvg18DExQlBwkSu from "./images/integrationsHeadersvg.svg"; // plasmic-import: 18DExQlBWKSu/picture
import foodDeliveryScooterPngPhotopngF2Pr8Eurvbj from "./images/foodDeliveryScooterPngPhotopng.png"; // plasmic-import: F2PR8Eurvbj_/picture
import lightningRemovebgPreviewpngLg9MSqLueKcN from "./images/lightningRemovebgPreviewpng.png"; // plasmic-import: Lg9mSqLueKcN/picture
import c519F38487C89Fadc75B13Ae907Ab12FRemovebgPreviewpngB9M9ZmYFqAKv from "./images/c519F38487C89Fadc75B13Ae907Ab12FRemovebgPreviewpng.png"; // plasmic-import: B9m9ZmYFqAKv/picture
import _11607942448Eynexrk8MlRemovebgPreviewpngCch0UhM8Io52 from "./images/_11607942448Eynexrk8MlRemovebgPreviewpng.png"; // plasmic-import: Cch0UhM8IO52/picture
import logo1Svg2LgUuEUsMbIPd from "./images/logo1Svg2.svg"; // plasmic-import: lgUuEUsMbIPd/picture

createPlasmicElementProxy;

export type PlasmicHomepage__VariantMembers = {};
export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage__OverridesType = {
  root?: Flex__<"div">;
  headerSliderSection?: Flex__<"div">;
  button?: Flex__<"button">;
  h1?: Flex__<"h1">;
  art?: Flex__<"div">;
  background2?: Flex__<"div">;
  copy?: Flex__<"div">;
  copy2?: Flex__<"div">;
  art2?: Flex__<"div">;
  copy3?: Flex__<"div">;
  art3?: Flex__<"div">;
};

export interface DefaultHomepageProps {
  className?: string;
}

const $$ = {};

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };

  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = useCurrentUser?.() || {};

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantstG5ZIq17X4W()
  });

  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <Stack__
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"headerSliderSection"}
            data-plasmic-override={overrides.headerSliderSection}
            className={classNames(projectcss.all, sty.headerSliderSection)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__d9HgN)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__kYfhH)}
              >
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__uomTn)}
                  displayHeight={"default"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"none"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"76px"}
                  src={{
                    src: logo1SvgA6JxNbb9O1Q,
                    fullWidth: 150,
                    fullHeight: 150,
                    aspectRatio: 1
                  }}
                />

                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__bsGjs)}
                >
                  <Stack__
                    as={PlasmicLink__}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__l32Y1
                    )}
                    platform={"react"}
                  >
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__vZxpv)}
                        role={"img"}
                      />
                    ) : null}
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___3XMs5
                      )}
                    >
                      {"Tour"}
                    </div>
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__j2GvJ)}
                        role={"img"}
                      />
                    ) : null}
                  </Stack__>
                  <Stack__
                    as={PlasmicLink__}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__iIlNc
                    )}
                    platform={"react"}
                  >
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__aCxTw)}
                        role={"img"}
                      />
                    ) : null}
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___1Nqzz
                      )}
                    >
                      {"Pricing"}
                    </div>
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg___2I8Vc)}
                        role={"img"}
                      />
                    ) : null}
                  </Stack__>
                  <Stack__
                    as={PlasmicLink__}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__jeIrR
                    )}
                    platform={"react"}
                  >
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__caik4)}
                        role={"img"}
                      />
                    ) : null}
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__exayJ
                      )}
                    >
                      {"Company"}
                    </div>
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__vxM8I)}
                        role={"img"}
                      />
                    ) : null}
                  </Stack__>
                  <Stack__
                    as={PlasmicLink__}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link___9Mx7I
                    )}
                    platform={"react"}
                  >
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__s669E)}
                        role={"img"}
                      />
                    ) : null}
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___1JfYx
                      )}
                    >
                      {"Contact"}
                    </div>
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__tC5Ys)}
                        role={"img"}
                      />
                    ) : null}
                  </Stack__>
                  <Stack__
                    as={PlasmicLink__}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link___4En6W
                    )}
                    platform={"react"}
                  >
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__xlVua)}
                        role={"img"}
                      />
                    ) : null}
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__je25A
                      )}
                      onClick={async event => {
                        const $steps = {};

                        $steps["runCode"] = true
                          ? (() => {
                              const actionArgs = {
                                customFunction: async () => {
                                  return undefined;
                                }
                              };
                              return (({ customFunction }) => {
                                return customFunction();
                              })?.apply(null, [actionArgs]);
                            })()
                          : undefined;
                        if (
                          $steps["runCode"] != null &&
                          typeof $steps["runCode"] === "object" &&
                          typeof $steps["runCode"].then === "function"
                        ) {
                          $steps["runCode"] = await $steps["runCode"];
                        }
                      }}
                    >
                      {"Sign up"}
                    </div>
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__ks2KK)}
                        role={"img"}
                      />
                    ) : null}
                  </Stack__>
                </Stack__>
                {false ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__bHb4W)}
                  >
                    <button
                      data-plasmic-name={"button"}
                      data-plasmic-override={overrides.button}
                      className={classNames(
                        projectcss.all,
                        projectcss.button,
                        projectcss.__wab_text,
                        sty.button
                      )}
                    >
                      {"Sign up"}
                    </button>
                    <Stack__
                      as={PlasmicLink__}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link__gs4Zc
                      )}
                      platform={"react"}
                    >
                      {false ? (
                        <IconIcon
                          className={classNames(projectcss.all, sty.svg__oi39M)}
                          role={"img"}
                        />
                      ) : null}
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___6FUuV
                        )}
                      >
                        {"Log in"}
                      </div>
                      {false ? (
                        <IconIcon
                          className={classNames(projectcss.all, sty.svg__wjSkE)}
                          role={"img"}
                        />
                      ) : null}
                    </Stack__>
                  </div>
                ) : null}
              </Stack__>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__y41D9)}
            >
              <h1
                data-plasmic-name={"h1"}
                data-plasmic-override={overrides.h1}
                className={classNames(
                  projectcss.all,
                  projectcss.h1,
                  projectcss.__wab_text,
                  sty.h1
                )}
              >
                {"Hero text for your startup's product."}
              </h1>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__imcDo
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "This is introduction text describing why people should use your product. Double-click anywhere on the text to edit it's contents."
                  : "Lorem Ipsum is simply dummy text of the \nprinting and typesetting industry. "}
              </div>
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__wKc3V)}
                displayHeight={
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "auto"
                    : "454px"
                }
                displayMaxHeight={"none"}
                displayMaxWidth={"81%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"auto"}
                loading={"lazy"}
                src={{
                  src: virtualAssistancepngFRBw3LBoYEco,
                  fullWidth: 2006,
                  fullHeight: 2006,
                  aspectRatio: undefined
                }}
              />
            </Stack__>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__f6M2)}>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__nvIe9)}
            >
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2__gf2D8
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "This header tells people why\n they should use your product."
                  : "Lorem Ipsum is Simply dummy text of\n the printing and typesetting industry"}
              </h2>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__u8Q1T
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "This is text giving an overview of the features section. Double-click anywhere on the text to edit it's contents."
                  : "Lorem Ipsum is Simply dummy text of the\n printing and typesetting industry"}
              </div>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__ax7Ba)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__udWyt)}>
                  <div
                    data-plasmic-name={"art"}
                    data-plasmic-override={overrides.art}
                    className={classNames(projectcss.all, sty.art)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img___20Kp0)}
                      displayHeight={"90%"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"none"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"90%"}
                      src={{
                        src: rocketManRemovebgPreview1Png5U2Q3GjFm4OY,
                        fullWidth: 530,
                        fullHeight: 471,
                        aspectRatio: undefined
                      }}
                    />

                    <div
                      data-plasmic-name={"background2"}
                      data-plasmic-override={overrides.background2}
                      className={classNames(projectcss.all, sty.background2)}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__xMFdY)}
                  >
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___2Q8Fo
                      )}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"copy"}
                        data-plasmic-override={overrides.copy}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.copy)}
                      >
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__pGfyl
                          )}
                        >
                          <h3
                            className={classNames(
                              projectcss.all,
                              projectcss.h3,
                              projectcss.__wab_text,
                              sty.h3__zxNj
                            )}
                          >
                            {"Lorem Ipsum "}
                          </h3>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__paREc
                            )}
                          >
                            {
                              "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book"
                            }
                          </div>
                        </Stack__>
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___9XBy
                          )}
                        >
                          <Stack__
                            as={PlasmicLink__}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              sty.link__teugc
                            )}
                            platform={"react"}
                          >
                            {false ? (
                              <IconIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__hXqDd
                                )}
                                role={"img"}
                              />
                            ) : null}
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__vu0Uf
                              )}
                            >
                              {"Learn more"}
                            </div>
                            {false ? (
                              <IconIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__fUmEl
                                )}
                                role={"img"}
                              />
                            ) : null}
                          </Stack__>
                        </Stack__>
                      </Stack__>
                    </Stack__>
                  </div>
                </div>
              </Stack__>
            </Stack__>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__pKAm)}>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__asDr8)}
            >
              <div className={classNames(projectcss.all, sty.column__jexdy)}>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___1DxeR)}
                >
                  <h3
                    className={classNames(
                      projectcss.all,
                      projectcss.h3,
                      projectcss.__wab_text,
                      sty.h3__rhD8J
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "This heading"
                      : "This heading"}
                  </h3>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__cbVd
                    )}
                  >
                    {
                      "Lorem Ipsum is simply dummy text of the printing and typesetting industry. "
                    }
                  </div>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__kJ2O)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: blastRemovebgPreviewpngGo42JSnTIs5S,
                      fullWidth: 499,
                      fullHeight: 499,
                      aspectRatio: undefined
                    }}
                  />
                </Stack__>
              </div>
              <div className={classNames(projectcss.all, sty.column__izaqJ)}>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___79ZrG)}
                >
                  <h3
                    className={classNames(
                      projectcss.all,
                      projectcss.h3,
                      projectcss.__wab_text,
                      sty.h3__oJluo
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "This heading"
                      : "This heading"}
                  </h3>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__wVxgF
                    )}
                  >
                    {
                      "Lorem Ipsum is simply dummy text of the printing and typesetting industry. "
                    }
                  </div>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img___1Oy33)}
                    displayHeight={"350px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: integrationsHeadersvg18DExQlBwkSu,
                      fullWidth: 133,
                      fullHeight: 150,
                      aspectRatio: 0.885714
                    }}
                  />
                </Stack__>
              </div>
            </Stack__>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__yoD0I)}>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__hi7Fm)}
            >
              <div className={classNames(projectcss.all, sty.freeBox__uwb6)}>
                <div className={classNames(projectcss.all, sty.freeBox__qdlIe)}>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__siyDo)}
                  >
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"copy2"}
                      data-plasmic-override={overrides.copy2}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.copy2)}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___5Z3Iq
                        )}
                      >
                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3__uP1J5
                          )}
                        >
                          {hasVariant(globalVariants, "screen", "mobileOnly")
                            ? "This is header about this product feature."
                            : "This is header about this product feature."}
                        </h3>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__zblS
                          )}
                        >
                          {
                            "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book"
                          }
                        </div>
                      </Stack__>
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__x8Kva
                        )}
                      >
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___8PXaf
                          )}
                        >
                          <Stack__
                            as={PlasmicLink__}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              sty.link__bE6Af
                            )}
                            platform={"react"}
                          >
                            {false ? (
                              <IconIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__pDpvy
                                )}
                                role={"img"}
                              />
                            ) : null}
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__ubzfg
                              )}
                            >
                              {"Learn more"}
                            </div>
                            {false ? (
                              <IconIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg___6VMvy
                                )}
                                role={"img"}
                              />
                            ) : null}
                          </Stack__>
                        </Stack__>
                      </Stack__>
                    </Stack__>
                  </Stack__>
                </div>
                <div
                  data-plasmic-name={"art2"}
                  data-plasmic-override={overrides.art2}
                  className={classNames(projectcss.all, sty.art2)}
                >
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__zBpQc)}
                    displayHeight={"363px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"none"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    src={{
                      src: foodDeliveryScooterPngPhotopngF2Pr8Eurvbj,
                      fullWidth: 777,
                      fullHeight: 687,
                      aspectRatio: undefined
                    }}
                  />
                </div>
              </div>
            </Stack__>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__xXuXb)}>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__zC9Ma)}
            >
              <div className={classNames(projectcss.all, sty.column__eNxba)}>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__fGSy)}
                >
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img___8I7Jg)}
                    displayHeight={"243px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: lightningRemovebgPreviewpngLg9MSqLueKcN,
                      fullWidth: 562,
                      fullHeight: 444,
                      aspectRatio: undefined
                    }}
                  />

                  <h3
                    className={classNames(
                      projectcss.all,
                      projectcss.h3,
                      projectcss.__wab_text,
                      sty.h3__tqfdv
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "This heading"
                      : "This heading"}
                  </h3>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ocQi1
                    )}
                  >
                    {
                      "Lorem Ipsum is simply dummy text of the printing and typesetting industry. "
                    }
                  </div>
                </Stack__>
              </div>
              <div className={classNames(projectcss.all, sty.column__au46D)}>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__ocTpe)}
                >
                  <h3
                    className={classNames(
                      projectcss.all,
                      projectcss.h3,
                      projectcss.__wab_text,
                      sty.h3__aavKq
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "This is header about this other product feature."
                      : "This is header about this other product feature."}
                  </h3>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__fkSM
                    )}
                  >
                    {
                      "Lorem Ipsum is simply dummy text of the printing and typesetting industry. "
                    }
                  </div>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__ccKDz)}
                    displayHeight={"248px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: c519F38487C89Fadc75B13Ae907Ab12FRemovebgPreviewpngB9M9ZmYFqAKv,
                      fullWidth: 577,
                      fullHeight: 433,
                      aspectRatio: undefined
                    }}
                  />
                </Stack__>
              </div>
            </Stack__>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__bOQey)}>
            <div className={classNames(projectcss.all, sty.freeBox__rYta)}>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__ruVm7)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__nHTsL)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__fx6Z)}
                  >
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___5S2Wa
                      )}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"copy3"}
                        data-plasmic-override={overrides.copy3}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.copy3)}
                      >
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__lNVxu
                          )}
                        >
                          <h3
                            className={classNames(
                              projectcss.all,
                              projectcss.h3,
                              projectcss.__wab_text,
                              sty.h3__jDdQ
                            )}
                          >
                            {hasVariant(globalVariants, "screen", "mobileOnly")
                              ? "Trusted by thousands of companies"
                              : "Lorem Ipsum is simply dummy text"}
                          </h3>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__jmLlK
                            )}
                          >
                            {
                              "Lorem Ipsum is simply dummy text of the printing and typesetting industry. "
                            }
                          </div>
                        </Stack__>
                      </Stack__>
                    </Stack__>
                  </div>
                  <div
                    data-plasmic-name={"art3"}
                    data-plasmic-override={overrides.art3}
                    className={classNames(projectcss.all, sty.art3)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__qJc3D)}
                      displayHeight={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "220px"
                          : "399px"
                      }
                      displayMaxHeight={"none"}
                      displayMaxWidth={"none"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"100%"}
                      src={{
                        src: _11607942448Eynexrk8MlRemovebgPreviewpngCch0UhM8Io52,
                        fullWidth: 480,
                        fullHeight: 517,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                </div>
              </Stack__>
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__bn4Sq)}>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__p6PAz)}
            >
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2__eNrIq
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "This is a final call-to-\naction header"
                  : "Make a call to action."}
              </h2>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__bq8Li)}
              >
                <Stack__
                  as={PlasmicLink__}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link___1Jc
                  )}
                  platform={"react"}
                >
                  {false ? (
                    <IconIcon
                      className={classNames(projectcss.all, sty.svg__gbB75)}
                      role={"img"}
                    />
                  ) : null}
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__gcaJf
                    )}
                  >
                    {"Sign up today"}
                  </div>
                  {false ? (
                    <IconIcon
                      className={classNames(projectcss.all, sty.svg__fqsqK)}
                      role={"img"}
                    />
                  ) : null}
                </Stack__>
              </Stack__>
            </Stack__>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__nQp07)}>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__viNxn)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__s7Tlv)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__d3FrJ)}
                >
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__icj2T)}
                    displayHeight={"40px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"none"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"40px"}
                    src={{
                      src: logo1Svg2LgUuEUsMbIPd,
                      fullWidth: 150,
                      fullHeight: 150,
                      aspectRatio: 1
                    }}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__vitLy
                    )}
                  >
                    {"Company Name"}
                  </div>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__vCGhB)}
                  >
                    <PlasmicLink__
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link__fadTg
                      )}
                      href={"#"}
                      platform={"react"}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg__fOun5)}
                        role={"img"}
                      />
                    </PlasmicLink__>
                    <PlasmicLink__
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link__fyjiw
                      )}
                      platform={"react"}
                    >
                      <Icon2Icon
                        className={classNames(projectcss.all, sty.svg__odgfM)}
                        role={"img"}
                      />
                    </PlasmicLink__>
                    <PlasmicLink__
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link__neJd1
                      )}
                      platform={"react"}
                    >
                      <Icon28Icon
                        className={classNames(projectcss.all, sty.svg__xSr5B)}
                        role={"img"}
                      />
                    </PlasmicLink__>
                  </Stack__>
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__aJqs)}
              >
                <h3
                  className={classNames(
                    projectcss.all,
                    projectcss.h3,
                    projectcss.__wab_text,
                    sty.h3___8TiFl
                  )}
                >
                  {"Product"}
                </h3>
                <Stack__
                  as={PlasmicLink__}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link___0GvLc
                  )}
                  platform={"react"}
                >
                  {false ? (
                    <IconIcon
                      className={classNames(projectcss.all, sty.svg__tarEv)}
                      role={"img"}
                    />
                  ) : null}
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___9FSbb
                    )}
                  >
                    {"Pricing"}
                  </div>
                  {false ? (
                    <IconIcon
                      className={classNames(projectcss.all, sty.svg__dvfEt)}
                      role={"img"}
                    />
                  ) : null}
                </Stack__>
                <Stack__
                  as={PlasmicLink__}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__fa6Fi
                  )}
                  platform={"react"}
                >
                  {false ? (
                    <IconIcon
                      className={classNames(projectcss.all, sty.svg__kjno)}
                      role={"img"}
                    />
                  ) : null}
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__v7EuZ
                    )}
                  >
                    {"Log in"}
                  </div>
                  {false ? (
                    <IconIcon
                      className={classNames(projectcss.all, sty.svg__yawNy)}
                      role={"img"}
                    />
                  ) : null}
                </Stack__>
                <Stack__
                  as={PlasmicLink__}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__bc9TK
                  )}
                  platform={"react"}
                >
                  {false ? (
                    <IconIcon
                      className={classNames(projectcss.all, sty.svg__d9Pu7)}
                      role={"img"}
                    />
                  ) : null}
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___3VnsE
                    )}
                  >
                    {"Integrations"}
                  </div>
                  {false ? (
                    <IconIcon
                      className={classNames(projectcss.all, sty.svg__ol1Zr)}
                      role={"img"}
                    />
                  ) : null}
                </Stack__>
                <Stack__
                  as={PlasmicLink__}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__ylckz
                  )}
                  platform={"react"}
                >
                  {false ? (
                    <IconIcon
                      className={classNames(projectcss.all, sty.svg__u2VrH)}
                      role={"img"}
                    />
                  ) : null}
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__zy7QI
                    )}
                  >
                    {"Insights"}
                  </div>
                  {false ? (
                    <IconIcon
                      className={classNames(projectcss.all, sty.svg__p92)}
                      role={"img"}
                    />
                  ) : null}
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__nnPy)}
              >
                <h3
                  className={classNames(
                    projectcss.all,
                    projectcss.h3,
                    projectcss.__wab_text,
                    sty.h3___9M0Rr
                  )}
                >
                  {"Legal"}
                </h3>
                <Stack__
                  as={PlasmicLink__}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__uu9Tx
                  )}
                  platform={"react"}
                >
                  {false ? (
                    <IconIcon
                      className={classNames(projectcss.all, sty.svg__gyxGi)}
                      role={"img"}
                    />
                  ) : null}
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__qTtom
                    )}
                  >
                    {"Documentation"}
                  </div>
                  {false ? (
                    <IconIcon
                      className={classNames(projectcss.all, sty.svg__paqX5)}
                      role={"img"}
                    />
                  ) : null}
                </Stack__>
                <Stack__
                  as={PlasmicLink__}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link___0RcCj
                  )}
                  platform={"react"}
                >
                  {false ? (
                    <IconIcon
                      className={classNames(projectcss.all, sty.svg___1VrKh)}
                      role={"img"}
                    />
                  ) : null}
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__qFzkh
                    )}
                  >
                    {"FAQs"}
                  </div>
                  {false ? (
                    <IconIcon
                      className={classNames(projectcss.all, sty.svg__eTgHf)}
                      role={"img"}
                    />
                  ) : null}
                </Stack__>
                <Stack__
                  as={PlasmicLink__}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__xQh4Z
                  )}
                  platform={"react"}
                >
                  {false ? (
                    <IconIcon
                      className={classNames(projectcss.all, sty.svg__n0Hf4)}
                      role={"img"}
                    />
                  ) : null}
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__zWfyw
                    )}
                  >
                    {"Status"}
                  </div>
                  {false ? (
                    <IconIcon
                      className={classNames(projectcss.all, sty.svg__nb2Wm)}
                      role={"img"}
                    />
                  ) : null}
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__lrVcx)}
              >
                <h3
                  className={classNames(
                    projectcss.all,
                    projectcss.h3,
                    projectcss.__wab_text,
                    sty.h3__bjDkO
                  )}
                >
                  {"Company"}
                </h3>
                <Stack__
                  as={PlasmicLink__}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__rcBH
                  )}
                  platform={"react"}
                >
                  {false ? (
                    <IconIcon
                      className={classNames(projectcss.all, sty.svg__vBlOh)}
                      role={"img"}
                    />
                  ) : null}
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__oqGz
                    )}
                  >
                    {"About"}
                  </div>
                  {false ? (
                    <IconIcon
                      className={classNames(projectcss.all, sty.svg__bd6Pp)}
                      role={"img"}
                    />
                  ) : null}
                </Stack__>
                <Stack__
                  as={PlasmicLink__}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link___8ZATr
                  )}
                  platform={"react"}
                >
                  {false ? (
                    <IconIcon
                      className={classNames(projectcss.all, sty.svg__e5SQ)}
                      role={"img"}
                    />
                  ) : null}
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__lTeyA
                    )}
                  >
                    {"Contact us"}
                  </div>
                  {false ? (
                    <IconIcon
                      className={classNames(projectcss.all, sty.svg__bwLxJ)}
                      role={"img"}
                    />
                  ) : null}
                </Stack__>
                <Stack__
                  as={PlasmicLink__}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__vSjOi
                  )}
                  platform={"react"}
                >
                  {false ? (
                    <IconIcon
                      className={classNames(projectcss.all, sty.svg___83KCd)}
                      role={"img"}
                    />
                  ) : null}
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__i59T
                    )}
                  >
                    {"Careers"}
                  </div>
                  {false ? (
                    <IconIcon
                      className={classNames(projectcss.all, sty.svg___5YEF)}
                      role={"img"}
                    />
                  ) : null}
                </Stack__>
                <Stack__
                  as={PlasmicLink__}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__iYykC
                  )}
                  platform={"react"}
                >
                  {false ? (
                    <IconIcon
                      className={classNames(projectcss.all, sty.svg__kdFzE)}
                      role={"img"}
                    />
                  ) : null}
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__aeRtr
                    )}
                  >
                    {"Media"}
                  </div>
                  {false ? (
                    <IconIcon
                      className={classNames(projectcss.all, sty.svg__prtwX)}
                      role={"img"}
                    />
                  ) : null}
                </Stack__>
              </Stack__>
            </Stack__>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__f2Gkn
              )}
            >
              <React.Fragment>
                <React.Fragment>
                  {
                    "\u00a9 Company. All rights reserved. This site proudly built with "
                  }
                </React.Fragment>
                {
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      projectcss.plasmic_default__inline,
                      sty.link__fvoyd
                    )}
                    platform={"react"}
                  >
                    {"Plasmic"}
                  </PlasmicLink__>
                }
                <React.Fragment>{"."}</React.Fragment>
              </React.Fragment>
            </div>
          </div>
        </Stack__>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "headerSliderSection",
    "button",
    "h1",
    "art",
    "background2",
    "copy",
    "copy2",
    "art2",
    "copy3",
    "art3"
  ],
  headerSliderSection: ["headerSliderSection", "button", "h1"],
  button: ["button"],
  h1: ["h1"],
  art: ["art", "background2"],
  background2: ["background2"],
  copy: ["copy"],
  copy2: ["copy2"],
  art2: ["art2"],
  copy3: ["copy3"],
  art3: ["art3"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  headerSliderSection: "div";
  button: "button";
  h1: "h1";
  art: "div";
  background2: "div";
  copy: "div";
  copy2: "div";
  art2: "div";
  copy3: "div";
  art3: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicHomepage__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    headerSliderSection: makeNodeComponent("headerSliderSection"),
    button: makeNodeComponent("button"),
    h1: makeNodeComponent("h1"),
    art: makeNodeComponent("art"),
    background2: makeNodeComponent("background2"),
    copy: makeNodeComponent("copy"),
    copy2: makeNodeComponent("copy2"),
    art2: makeNodeComponent("art2"),
    copy3: makeNodeComponent("copy3"),
    art3: makeNodeComponent("art3"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
